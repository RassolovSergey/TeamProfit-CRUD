// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Web_Api.Data;

#nullable disable

namespace Web_Api.Migrations
{
    [DbContext(typeof(TeamProfitDBContext))]
    [Migration("20250409212615_Migrashion4")]
    partial class Migrashion4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Web_Api.Model.Cost", b =>
                {
                    b.Property<int>("IdCosts")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCosts"));

                    b.Property<decimal?>("Amounts")
                        .HasColumnType("numeric");

                    b.Property<int>("IdProject")
                        .HasColumnType("integer");

                    b.Property<int>("IdUser")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Percent")
                        .HasColumnType("numeric");

                    b.Property<int>("TypeCosts")
                        .HasColumnType("integer");

                    b.HasKey("IdCosts");

                    b.HasIndex("IdUser");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("Web_Api.Model.Project", b =>
                {
                    b.Property<int>("IdProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProject"));

                    b.Property<DateTime?>("DateClosure")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("Description")
                        .HasColumnType("bigint");

                    b.Property<int?>("IdTeam")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("IdProject");

                    b.HasIndex("IdTeam")
                        .IsUnique();

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Web_Api.Model.Team", b =>
                {
                    b.Property<int>("IdTeam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTeam"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("IdTeam");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Web_Api.Model.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUser"));

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("IdTeam")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PriceWork")
                        .HasColumnType("numeric");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("Salt")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("TypeCooperation")
                        .HasColumnType("integer");

                    b.HasKey("IdUser");

                    b.HasIndex("IdTeam");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Web_Api.Model.Cost", b =>
                {
                    b.HasOne("Web_Api.Model.User", "User")
                        .WithMany("Costs")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Web_Api.Model.Project", b =>
                {
                    b.HasOne("Web_Api.Model.Team", "Team")
                        .WithOne()
                        .HasForeignKey("Web_Api.Model.Project", "IdTeam");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Web_Api.Model.User", b =>
                {
                    b.HasOne("Web_Api.Model.Team", "Team")
                        .WithMany("Users")
                        .HasForeignKey("IdTeam");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Web_Api.Model.Team", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Web_Api.Model.User", b =>
                {
                    b.Navigation("Costs");
                });
#pragma warning restore 612, 618
        }
    }
}
