@page "/tree"
@using BlazorApp.Model
@using BlazorApp.Pages
@using BlazorApp.Components
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Web

@inject HttpClient Http

<h1 style="text-align: center; font-size: 24px;">Иерархическое Дерево</h1>

@if (TreeNodes == null)
{
    <p>Загрузка...</p>
}
else if (!TreeNodes.Any())
{
    <p>Данные отсутствуют</p>
}
else
{
    <ul class="list-unstyled">
        @foreach (var node in TreeNodes)
        {
            <TreeNodeComponent Node="node"
                               Level="0"
                               OnExpand="ExpandNode"
                               OnContextMenu="ShowContextMenu"
                               OnNodeDrop="HandleNodeDrop" />
        }
    </ul>
}


@code {
    private List<TreeNodeDto>? TreeNodes;

    protected override async Task OnInitializedAsync()
    {
        TreeNodes = await Http.GetFromJsonAsync<List<TreeNodeDto>>("Tree/root");
    }

    private async Task ExpandNode(TreeNodeDto node)
    {
        var children = await Http.GetFromJsonAsync<List<TreeNodeDto>>(
            $"Tree/{node.NodeType}/{node.Id}/children");
        node.Children = children;
    }

    private Task ShowContextMenu((TreeNodeDto node, MouseEventArgs e) args)
        => Task.CompletedTask;

    private Task HandleNodeDrop((TreeNodeDto dragged, TreeNodeDto target) args)
        => Task.CompletedTask;
}
